name: "tao_net_mod"
input: "data"
input_shape{
dim: 1
dim: 1
dim:  1024
dim:  1024
dim:  3
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  phase: PREDICT
  convolution_param {
    num_output: 64
    kernel_size: 11 kernel_size: 11  kernel_size: 3
    stride: 1
    pad:5 pad:5 pad:0
  }
}


layer {
	bottom: "conv1_1"
	top: "conv1_1"
	name: "bn_conv1_1"
	type: "BatchNorm"
	phase: PREDICT
}

layer {
	bottom: "conv1_1"
	top: "conv1_1"
	name: "scale_conv1_1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}

layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  phase: PREDICT
  convolution_param {
    num_output: 64
    kernel_size: 3 kernel_size: 3  kernel_size: 1
    stride: 1
    pad:1 pad:1 pad:0
  }
}

layer {
	bottom: "conv1_2" 	top: "conv1_2" 	name: "bn_conv1_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv1_2" 	top: "conv1_2" 	name: "scale_conv1_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu1_2" type: "ReLU" bottom: "conv1_2" top: "conv1_2"
}


layer {
  name: "reshape"
  type: "Reshape"
  bottom: "conv1_2"
  top: "conv1_2"
  reshape_param { shape: {dim: 0 dim: 0 dim: 0 dim: 0 } }
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
  kernel_size: 2
  stride: 2
  }
  phase: PREDICT
}


layer {
  name: "conv2_1b"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1b"
  convolution_param {
    num_output: 196
    kernel_size: 1
    stride: 1 pad:0
  }
  #phase: PREDICT
}
layer {
	bottom: "conv2_1b" 	top: "conv2_1b" 	name: "bn_conv2_1b"	type: "BatchNorm" 
}

layer {
	bottom: "conv2_1b" 	top: "conv2_1b" 	name: "scale_conv2_1b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 196
    kernel_size: 3
    stride: 1 pad:1
  }
  phase: PREDICT
}
layer {
	bottom: "conv2_1" 	top: "conv2_1" 	name: "bn_conv2_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv2_1" 	top: "conv2_1" 	name: "scale_conv2_1"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu2_1" type: "ReLU" bottom: "conv2_1" top: "conv2_1"
}

layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  convolution_param {
    num_output: 196
    kernel_size: 3
    stride: 1 pad:1
  }
  phase: PREDICT
}

layer {
	bottom: "conv2_2" 	top: "conv2_2" 	name: "bn_conv2_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv2_2" 	top: "conv2_2" 	name: "scale_conv2_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu2_2" type: "ReLU" bottom: "conv2_2" top: "conv2_2"
}


layer {
  name: "conv2_3"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv2_3"
  convolution_param {
    num_output: 196
    kernel_size: 3 stride: 1 pad:1
  }
  phase: PREDICT
}
layer {
	bottom: "conv2_3" 	top: "conv2_3" 	name: "bn_conv2_3"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv2_3" 	top: "conv2_3" 	name: "scale_conv2_3"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "conv2_sum"
     type:  "Eltwise"
     bottom:"conv2_3"
     bottom: "conv2_1b"
     top:"conv2_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
     }


layer {name: "relu_conv2_sum" type: "ReLU" bottom: "conv2_sum" top: "conv2_sum"}


#conv_3x---------------------------------------------

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_sum"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
  phase: PREDICT
}

layer {
  name: "conv3_1b"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1b"
  #phase: PREDICT
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1 pad:0
  }
}
layer {
	bottom: "conv3_1b" 	top: "conv3_1b" 	name: "bn_conv3_1b"	type: "BatchNorm" 
}

layer {
	bottom: "conv3_1b" 	top: "conv3_1b" 	name: "scale_conv3_1b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  phase: PREDICT
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1 pad:1
  }
}
layer {
	bottom: "conv3_1" 	top: "conv3_1" 	name: "bn_conv3_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv3_1" 	top: "conv3_1" 	name: "scale_conv3_1"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu3_1" type: "ReLU" bottom: "conv3_1" top: "conv3_1"
}



layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  phase: PREDICT
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1 pad:1
  }
}

layer {
	bottom: "conv3_2" 	top: "conv3_2" 	name: "bn_conv3_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv3_2" 	top: "conv3_2" 	name: "scale_conv3_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu3_2" type: "ReLU" bottom: "conv3_2" top: "conv3_2"
}

layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  phase: PREDICT
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1 pad:1
  }
}
layer {
	bottom: "conv3_3" 	top: "conv3_3" 	name: "bn_conv3_3"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv3_3" 	top: "conv3_3" 	name: "scale_conv3_3"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "conv3_sum"
     type:  "Eltwise"
     bottom:"conv3_3"
     bottom: "conv3_1b"
     top:"conv3_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
}

layer {name: "relu3_sum" type: "ReLU" bottom: "conv3_sum" top: "conv3_sum"}

# --------------------conv 4_X----------------------------
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_sum"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
  phase: PREDICT
}

layer {
  name: "conv4_1b"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1b"
  #phase: PREDICT
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1 pad:0
  }
}
layer {
	bottom: "conv4_1b" 	top: "conv4_1b" 	name: "bn_conv4_1b"	type: "BatchNorm" 
}

layer {
	bottom: "conv4_1b" 	top: "conv4_1b" 	name: "scale_conv4_1b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  phase: PREDICT
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1 pad:1
  }
}

layer {
	bottom: "conv4_1" 	top: "conv4_1" 	name: "bn_conv4_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv4_1" 	top: "conv4_1" 	name: "scale_conv4_1"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu4_1" type: "ReLU" bottom: "conv4_1" top: "conv4_1"
}

layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  phase: PREDICT
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1 pad:1
  }
}

layer {
	bottom: "conv4_2" 	top: "conv4_2" 	name: "bn_conv4_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv4_2" 	top: "conv4_2" 	name: "scale_conv4_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu4_2" type: "ReLU" bottom: "conv4_2" top: "conv4_2"
}

layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  phase: PREDICT
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1 pad:1
  }
}
layer {
	bottom: "conv4_3" 	top: "conv4_3" 	name: "bn_conv4_3"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv4_3" 	top: "conv4_3" 	name: "scale_conv4_3"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "conv4_sum"
     type:  "Eltwise"
     bottom:"conv4_3"
     bottom: "conv4_1b"
     top:"conv4_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
}

layer {name: "relu4_sum" type: "ReLU" bottom: "conv4_sum" top: "conv4_sum"}


#########-----------------------------conv5x_____----------------------------------------------

#---conv 4_X----------------------------
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_sum"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
  phase: PREDICT
}

layer {
  name: "conv5_1b"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1b"
  #phase: PREDICT
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1 pad:0
  }
}
layer {
	bottom: "conv5_1b" 	top: "conv5_1b" 	name: "bn_conv5_1b"	type: "BatchNorm" 
}

layer {
	bottom: "conv5_1b" 	top: "conv5_1b" 	name: "scale_conv5_1b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  phase: PREDICT
  convolution_param {
    num_output: 1024
    kernel_size: 3
    stride: 1 pad:1
  }
}

layer {
	bottom: "conv5_1" 	top: "conv5_1" 	name: "bn_conv5_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv5_1" 	top: "conv5_1" 	name: "scale_conv5_1"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu4_1" type: "ReLU" bottom: "conv5_1" top: "conv5_1"
}

layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  phase: PREDICT
  convolution_param {
    num_output: 1024
    kernel_size: 3
    stride: 1 pad:1
  }
}

layer {
	bottom: "conv5_2" 	top: "conv5_2" 	name: "bn_conv5_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv5_2" 	top: "conv5_2" 	name: "scale_conv5_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu4_2" type: "ReLU" bottom: "conv5_2" top: "conv5_2"
}

layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  phase: PREDICT
  convolution_param {
    num_output: 1024
    kernel_size: 3
    stride: 1 pad:1
  }
}
layer {
	bottom: "conv5_3" 	top: "conv5_3" 	name: "bn_conv5_3"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "conv5_3" 	top: "conv5_3" 	name: "scale_conv5_3"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "conv5_sum"
     type:  "Eltwise"
     bottom:"conv5_3"
     bottom: "conv5_1b"
     top:"conv5_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
}


layer {name: "relu5_sum" type: "ReLU" bottom: "conv5_sum" top: "conv5_sum"}




#----------------- devconv to xx times -------------------------------------------------------


layer { bottom: 'conv5_sum' top: 'deconv5_2b' name: 'deconv5_2b'  type: "Deconvolution"
  #phase: PREDICT
  convolution_param { num_output: 512	pad: 0	kernel_size: 1
    } }
layer {
	bottom: "deconv5_2b" 	top: "deconv5_2b" 	name: "bn_deconv5_2b"	type: "BatchNorm" 
}

layer {
	bottom: "deconv5_2b" 	top: "deconv5_2b" 	name: "scale_deconv5_2b"	type: "Scale"
	scale_param {	bias_term: true}
}


layer { bottom: 'conv5_sum' top: 'deconv5_2' name: 'deconv5_2'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 1024	pad: 1	kernel_size: 3
    } }

layer {
	bottom: "deconv5_2" 	top: "deconv5_2" 	name: "bn_deconv5_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv5_2" 	top: "deconv5_2" 	name: "scale_deconv5_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu4_2" type: "ReLU" bottom: "deconv5_2" top: "deconv5_2"
}


layer { bottom: 'deconv5_2' top: 'deconv5_1' name: 'deconv5_1'  type: "Deconvolution"
phase: PREDICT
  convolution_param { num_output: 512	pad: 1	kernel_size: 3
   } }
layer {
	bottom: "deconv5_1" 	top: "deconv5_1" 	name: "bn_deconv5_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv5_1" 	top: "deconv5_1" 	name: "scale_deconv5_1"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "relu4_1" type: "ReLU" bottom: "deconv5_1" top: "deconv5_1"
}

layer { bottom: 'deconv5_1' top: 'deconv5_0' name: 'deconv5_0'  type: "Deconvolution"
phase: PREDICT
  convolution_param { num_output: 512	pad: 1	kernel_size: 3
   } }
layer {
	bottom: "deconv5_0" 	top: "deconv5_0" 	name: "bn_deconv5_0"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv5_0" 	top: "deconv5_0" 	name: "scale_deconv5_0"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "deconv5_sum" type:  "Eltwise" bottom:"deconv5_2b" bottom: "deconv5_0" top:"deconv5_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
     }
     layer {
       name: "relu4_deconv5_sum" type: "ReLU" bottom: "deconv5_sum" top: "deconv5_sum"
     }





layer { type: "Unpooling"  bottom: "deconv5_sum"  bottom: "pool4_mask"  top: "unpool4"  name: "unpool4"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2 pad:0}
  phase: PREDICT
}

layer { bottom: 'unpool4' top: 'deconv4_2b' name: 'deconv4_2b'  type: "Deconvolution"
  #phase: PREDICT
  convolution_param { num_output: 256	pad: 0	kernel_size: 1
} }
layer {
	bottom: "deconv4_2b" 	top: "deconv4_2b" 	name: "bn_deconv4_2b"	type: "BatchNorm" 
}

layer {
	bottom: "deconv4_2b" 	top: "deconv4_2b" 	name: "scale_deconv4_2b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer { bottom: 'unpool4' top: 'deconv4_2' name: 'deconv4_2'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 512	pad: 1	kernel_size: 3
} }

layer {
	bottom: "deconv4_2" 	top: "deconv4_2" 	name: "bn_deconv4_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv4_2" 	top: "deconv4_2" 	name: "scale_deconv4_2"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu4_2" type: "ReLU" bottom: "deconv4_2" top: "deconv4_2"
}


layer { bottom: 'deconv4_2' top: 'deconv4_1' name: 'deconv4_1'  type: "Deconvolution"
phase: PREDICT
  convolution_param { num_output: 256	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv4_1" 	top: "deconv4_1" 	name: "bn_deconv4_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv4_1" 	top: "deconv4_1" 	name: "scale_deconv4_1"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "relu4_1" type: "ReLU" bottom: "deconv4_1" top: "deconv4_1"
}

layer { bottom: 'deconv4_1' top: 'deconv4_0' name: 'deconv4_0'  type: "Deconvolution"
phase: PREDICT
  convolution_param { num_output: 256	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv4_0" 	top: "deconv4_0" 	name: "bn_deconv4_0"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv4_0" 	top: "deconv4_0" 	name: "scale_deconv4_0"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "deconv4_sum" type:  "Eltwise" bottom:"deconv4_2b" bottom: "deconv4_0" top:"deconv4_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
     }
     
     layer {
       name: "relu4_deconv4_sum" type: "ReLU" bottom: "deconv4_sum" top: "deconv4_sum"
     }


#-------- deconv_3-------------------------------------

layer { type: "Unpooling"  bottom: "deconv4_sum"  bottom: "pool3_mask"  top: "unpool3"  name: "unpool3"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2 pad:0}
  phase: PREDICT
}

layer { bottom: 'unpool3' top: 'deconv3_3b' name: 'deconv3_3b'  type: "Deconvolution"
  #phase: PREDICT
  convolution_param { num_output: 196	pad: 0	kernel_size: 1
    } }
layer {
	bottom: "deconv3_3b" 	top: "deconv3_3b" 	name: "bn_deconv3_3b"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv3_3b" 	top: "deconv3_3b" 	name: "scale_deconv3_3b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer { bottom: 'unpool3' top: 'deconv3_3' name: 'deconv3_3'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 392	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv3_3" 	top: "deconv3_3" 	name: "bn_deconv3_3"	type: "BatchNorm" phase: PREDICT
}
layer {
	bottom: "deconv3_3" 	top: "deconv3_3" 	name: "scale_deconv3_3"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu_deconv3_3" type: "ReLU" bottom: "deconv3_3" top: "deconv3_3"
}


layer { bottom: 'deconv3_3' top: 'deconv3_2' name: 'deconv3_2'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 196	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv3_2" 	top: "deconv3_2" 	name: "bn_deconv3_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv3_2" 	top: "deconv3_2" 	name: "scale_deconv3_2"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "relu_deconv3_2" type: "ReLU" bottom: "deconv3_2" top: "deconv3_2"
}

layer { bottom: 'deconv3_2' top: 'deconv3_1' name: 'deconv3_1'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 196	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv3_1" 	top: "deconv3_1" 	name: "bn_deconv3_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv3_1" 	top: "deconv3_1" 	name: "scale_deconv3_1"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "deconv3_sum" type:  "Eltwise" bottom:"deconv3_3b" bottom: "deconv3_1" top:"deconv3_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
     }

     layer {
       name: "relu3_sum" type: "ReLU" bottom: "deconv3_sum" top: "deconv3_sum"
     }
#-------- deconv_2-------------------------------------

layer { type: "Unpooling"  bottom: "deconv3_sum"  bottom: "pool2_mask"  top: "unpool2"  name: "unpool2"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2 } phase: PREDICT
}

layer { bottom: 'unpool2' top: 'deconv2_3b' name: 'deconv2_3b'  type: "Deconvolution"
  #phase: PREDICT
  convolution_param { num_output: 64	pad: 0	kernel_size: 1
   } }
layer {
	bottom: "deconv2_3b" 	top: "deconv2_3b" 	name: "bn_deconv2_3b"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv2_3b" 	top: "deconv2_3b" 	name: "scale_deconv2_3b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer { bottom: 'unpool2' top: 'deconv2_3' name: 'deconv2_3'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 128	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv2_3" 	top: "deconv2_3" 	name: "bn_deconv2_3"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv2_3" 	top: "deconv2_3" 	name: "scale_deconv2_3"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu_deconv2_3" type: "ReLU" bottom: "deconv2_3" top: "deconv2_3"
}

layer { bottom: 'deconv2_3' top: 'deconv2_2' name: 'deconv2_2'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 64	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv2_2" 	top: "deconv2_2" 	name: "bn_deconv2_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv2_2" 	top: "deconv2_2" 	name: "scale_deconv2_2"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "relu_deconv2_2" type: "ReLU" bottom: "deconv2_2" top: "deconv2_2"
}

layer { bottom: 'deconv2_2' top: 'deconv2_1' name: 'deconv2_1'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 64	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv2_1" 	top: "deconv2_1" 	name: "bn_deconv2_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv2_1" 	top: "deconv2_1" 	name: "scale_deconv2_1"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "deconv2_sum" type:  "Eltwise" bottom:"deconv2_3b" bottom: "deconv2_1" top:"deconv2_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
     }

     layer {
       name: "relu2_sum" type: "ReLU" bottom: "deconv2_sum" top: "deconv2_sum"
     }


#-------- deconv_1-------------------------------------

layer { type: "Unpooling"  bottom: "deconv2_sum"  bottom: "pool1_mask"  top: "unpool1"  name: "unpool1"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2 } phase: PREDICT
}

layer { bottom: 'unpool1' top: 'deconv1_3b' name: 'deconv1_3b'  type: "Deconvolution"
  #phase: PREDICT
  convolution_param { num_output: 64	pad: 0	kernel_size: 1
    } }
layer {
	bottom: "deconv1_3b" 	top: "deconv1_3b" 	name: "bn_deconv1_3b"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv1_3b" 	top: "deconv1_3b" 	name: "scale_deconv1_3b"	type: "Scale"
	scale_param {	bias_term: true}
}

layer { bottom: 'unpool1' top: 'deconv1_3' name: 'deconv1_3'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 64	pad: 1	kernel_size: 3
    } }
layer {
	bottom: "deconv1_3" 	top: "deconv1_3" 	name: "bn_deconv1_3"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv1_3" 	top: "deconv1_3" 	name: "scale_deconv1_3"	type: "Scale"
	scale_param {	bias_term: true}
}
layer {
  name: "relu1_3" type: "ReLU" bottom: "deconv1_3" top: "deconv1_3"
}


layer { bottom: 'deconv1_3' top: 'deconv1_2' name: 'deconv1_2'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 64	pad: 1	kernel_size: 3
    } }

layer {
	bottom: "deconv1_2" 	top: "deconv1_2" 	name: "bn_deconv1_2"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv1_2" 	top: "deconv1_2" 	name: "scale_deconv1_2"	type: "Scale"
	scale_param {	bias_term: true}
}

layer {
  name: "relu1_2" type: "ReLU" bottom: "deconv1_2" top: "deconv1_2"
}

layer { bottom: 'deconv1_2' top: 'deconv1_1' name: 'deconv1_1'  type: "Deconvolution"
  phase: PREDICT
  convolution_param { num_output: 64	pad: 1	kernel_size: 3
    } }

layer {
	bottom: "deconv1_1" 	top: "deconv1_1" 	name: "bn_deconv1_1"	type: "BatchNorm" phase: PREDICT
}

layer {
	bottom: "deconv1_1" 	top: "deconv1_1" 	name: "scale_deconv1_1"	type: "Scale"
	scale_param {	bias_term: true}
}

layer{
     name: "deconv1_sum" type:  "Eltwise" bottom:"deconv1_1" bottom: "deconv1_3b" top:"deconv1_sum"
     eltwise_param {operation: SUM   }
	 phase: PREDICT
}

layer {
  name: "relu1_sum" type: "ReLU" bottom: "deconv1_sum" top: "deconv1_sum"
}


layer { name: 'seg_score' type: "Convolution" bottom: 'deconv1_sum' top: 'seg_score'
  phase: PREDICT
   convolution_param { num_output: 2 kernel_size: 1
     } }

layer{
name:"softmaxout"
type: "Softmax"
bottom:"seg_score"
top:"prob"
}



